#include <stdio.h>
#include <stdlib.h>
struct Item {
    int weight;
    int value;
    double ratio; 
};
int compareItems(const void *a, const void *b) {
    return ((struct Item *)b)->ratio - ((struct Item *)a)->ratio;
}
void fractionalKnapsack(struct Item items[], int n, int capacity) {
    qsort(items, n, sizeof(struct Item), compareItems);

    int currentWeight = 0; 
    double totalValue = 0.0; 
int i;
    for ( i = 0; i < n; i++) {
        if (currentWeight + items[i].weight <= capacity) {
            currentWeight += items[i].weight;
            totalValue += items[i].value;
        } else {
            double fraction = (double)(capacity - currentWeight) / items[i].weight;
            currentWeight = capacity;
            totalValue += items[i].value * fraction;
            break; 
        }
    }

    printf("Maximum value in the knapsack: %.2f\n", totalValue);
}

int main() {
    int n, capacity;

    printf("Enter the number of items: ");
    scanf("%d", &n);

    struct Item items[n];

    printf("Enter the weight and value of each item:\n");
    int i;
    for (i = 0; i < n; i++) {
        printf("Item %d: ", i + 1);
        scanf("%d %d", &items[i].weight, &items[i].value);
        items[i].ratio = (double)items[i].value / items[i].weight; 
    }

    printf("Enter the capacity of the knapsack: ");
    scanf("%d", &capacity);

    fractionalKnapsack(items, n, capacity);

    return 0;
}
